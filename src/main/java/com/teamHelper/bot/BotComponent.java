package com.teamHelper.bot;

import com.teamHelper.model.CalendarEvent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Component
public class BotComponent extends TelegramLongPollingBot {

    @Autowired
    private MessageBuilder messageBuilder;

    @Value("${telegram.bot.username}")
    private String botUsername;

    @Value("${telegram.bot.token}")
    private String botToken;

    @Value("${telegram.admin.chatId}")
    private String adminChatId;

    @Value("${telegram.notification.chatId}")
    private String notificationChatId;

    @Value("${telegram.error.chatId}")
    private String errorChatID;

    public BotComponent(@Value("${telegram.bot.token}") String botToken) {
        super(botToken);
        System.out.println("üü¢ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω: " + botToken.substring(0, 6) + "...");
    }

    @Override
    public String getBotUsername() {
        return botUsername;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            handleIncomingMessage(update);
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    public void sendErrorMessage(String errorText) {
        SendMessage message = new SendMessage();
        message.setChatId(errorChatID);
        message.setText("‚ùå –û—à–∏–±–∫–∞: " + errorText);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + e.getMessage());
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏–∏
    public void sendCalendarNotification(CalendarEvent event) {
        SendMessage message = new SendMessage();
        message.setChatId(notificationChatId); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
        message.setText(messageBuilder.buildEventMessage(event));
        message.setParseMode("MarkdownV2");
        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + e.getMessage());
        }
    }

    private void handleIncomingMessage(Update update) {
        String messageText = update.getMessage().getText();
        long chatId = update.getMessage().getChatId();

        String helpText = """
                –Ø –º–∞–ª–µ–Ω—å–∫–∏–π –∏ —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–∑–Ω–∞—é
                               
                ‚è∞ –í–æ—Ç –º–æ–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                /check –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                """;

        switch (messageText) {
            case "/start":
                sendResponse(chatId, "–ü—Ä–∏–≤–µ—Ç! –Ø –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ —Å–æ–±—ã—Ç–∏—è—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–º–∞–Ω–¥–µ");
                break;
            case "/check":
                sendResponse(chatId, "–ü—Ä–æ–≤–µ—Ä—è—é –∫–∞–ª–µ–Ω–¥–∞—Ä—å...");

                break;
            default:
                sendResponse(chatId, helpText);
        }
    }

    private void sendResponse(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(text);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + e.getMessage());
        }
    }
}